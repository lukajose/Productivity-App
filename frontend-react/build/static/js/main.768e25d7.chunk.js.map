{"version":3,"sources":["axios.js","pages/Register.js","pages/Login.js","AuthContext.js","components/protectedRoute.js","Header.js","TodoItems.js","Timer.js","components/chart.js","TodoList.js","pages/DashBoard.js","App.js","index.js"],"names":["qs","require","_","axios","interceptors","request","use","method","data","stringify","toast","configure","response","error","message","get","console","log","success","position","POSITION","TOP_CENTER","closeOnClick","closeButton","Promise","reject","useStyles","makeStyles","theme","body","backgroundColor","card","palette","background","paper","marginTop","spacing","padding","display","flexDirection","alignItems","borderRadius","shape","RegisterPage","setAuth","props","React","useState","name_first","name_last","email","password","values","setValues","handleChange","name","event","target","value","classes","createMuiTheme","primary","green","Container","component","maxWidth","Box","boxShadow","className","Avatar","style","fontSize","Typography","variant","noValidate","onSubmit","e","preventDefault","post","then","token","u_id","history","push","catch","err","ThemeProvider","TextField","margin","required","fullWidth","id","label","type","autoFocus","onChange","Button","color","Grid","container","item","Link","href","textfield","LoginPage","autoComplete","direction","AuthContext","createContext","AuthProvider","Provider","Consumer","ProtectedRoute","useContext","to","headerStyle","overflow","textAlign","fontFamily","Header","TodoItems","getStyle","textDecoration","completed","createTasks","bind","this","text","onClick","key","rename","delete","edit","listItems","entries","map","Component","Timer","state","hours","minutes","seconds","TotalHours","changeTimer","UpdateTimeHours","UpdateTimeMinutes","UpdateTimeSeconds","_inputHours","_inputMinutes","_inputSeconds","setState","starter","prevProps","checkTimer","getHours","myInterval","setInterval","clearInterval","addHours","current","isNaN","parseInt","transformTime","time","timeFormat","placeholder","cancelItemCountdown","Chart","labels","ChartData","datasets","width","height","options","legend","labelString","scales","yAxes","ticks","beginAtZero","stepSize","TodoList","items","search","startTimer","taskId","currentKey","addItem","deleteItem","renameItem","searchItem","markCompleted","_inputElement","Date","now","TaskId","newS","isSearchEmpty","concat","prevState","delete_filter","filteredItems","filter","prompt","Ar","Array","isArray","length","newL","currentL","toLowerCase","includes","searchA","i","AddTaskHours","cancelItem","cancelClock","ref","a","getCharData","AllData","DashBoardPage","App","localStorage","getItem","authDetails","setAuthDetails","setItem","exact","path","render","Login","Register","DashBoard","destination","document","querySelector","ReactDOM"],"mappings":"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","file":"static/js/main.768e25d7.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css'\r\nconst qs = require('qs');\r\nconst _ = require('lodash');\r\n\r\naxios.interceptors.request.use((request) => {\r\n    if(request.method === \"put\" || request.method === \"get\" || request.method === \"post\" || request.method === \"delete\") {\r\n        request.data = qs.stringify(request.data);\r\n    }\r\n    return request;\r\n});\r\n\r\n\r\ntoast.configure();\r\n\r\n\r\nconst ErrorHandler = (error) => {\r\n    let message = 'Invalid action !';\r\n\r\n    if(error.response) {\r\n        message = _.get(error,'response.data.message') || 'Invalid action !';\r\n    }\r\n    console.log('error',error.response,'message:',message);\r\n    toast.success(message,{\r\n        position:toast.POSITION.TOP_CENTER,\r\n        closeOnClick:true,\r\n        closeButton: true,\r\n    });\r\n    return Promise.reject({...error});\r\n  }\r\n  const responseHandler = (response) => {\r\n    return response;\r\n  }\r\n\r\n  axios.interceptors.response.use(responseHandler,ErrorHandler);\r\n\r\n\r\n\r\n","import axios from 'axios';\r\nimport {\r\n    Avatar,\r\n    Box,\r\n    Button,\r\n    Container,\r\n    ThemeProvider,\r\n    Grid,\r\n    Link,\r\n    makeStyles,\r\n    TextField,\r\n    Typography,\r\n    createMuiTheme,\r\n} from '@material-ui/core';\r\nimport BlurLinearIcon from '@material-ui/icons/BlurLinear';\r\nimport React from 'react';\r\nimport { green } from '@material-ui/core/colors';\r\nimport '../axios'\r\n\r\nconst useStyles = makeStyles((theme)=> ({\r\n        '@global': {\r\n            body: {\r\n                backgroundColor: '#00FA9A',\r\n\r\n            },\r\n\r\n        },\r\n        card: {\r\n            backgroundColor:theme.palette.background.paper,\r\n            marginTop:theme.spacing(8),\r\n            padding: theme.spacing(8),\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center',\r\n            borderRadius: theme.shape.borderRadius,\r\n            \r\n        }\r\n    })\r\n);\r\n\r\n\r\n\r\nfunction RegisterPage({setAuth, ... props}) {\r\n    // use current input\r\n    const [values,setValues] = React.useState({\r\n        name_first: '',\r\n        name_last:'',\r\n        email:'',\r\n        password:''\r\n\r\n    });\r\n    const handleChange = name=> event => {\r\n        setValues({...values,[name]:event.target.value});\r\n    }\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        //quick check\r\n        if(!values.email || !values.password) return;\r\n        console.log('values:',{...values})\r\n        // send data to backend\r\n        axios.post('/auth/register', {... values})\r\n            .then((response) => {\r\n                console.log(response);\r\n                const data = response.data;\r\n                setAuth(data.token,data.u_id);\r\n                props.history.push('/');\r\n            })\r\n            //in case of error\r\n            .catch((err)=> {console.log('error register',err)});\r\n\r\n    }\r\n\r\n    const classes = useStyles();\r\n    const theme = createMuiTheme({\r\n        palette: {\r\n          primary: green,\r\n        },\r\n      });\r\n\r\n    return (\r\n        <Container component= \"main\" maxWidth=\"sm\">\r\n            <Box boxShadow= {3} className= {classes.card}>\r\n                <Avatar style={{backgroundColor:\"black\"}}>\r\n                    <BlurLinearIcon style={{fontSize:30}}/> \r\n                </Avatar>               \r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Register\r\n                </Typography>\r\n                <form noValidate onSubmit={handleSubmit}>\r\n                    <ThemeProvider theme={theme}>\r\n                        <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"name_first\"\r\n                        label=\"Firt name\"\r\n                        name=\"name_first\"\r\n                        type=\"text\"\r\n                        autoFocus\r\n                        value={values.name_first}\r\n                        onChange={handleChange('name_first')}\r\n                        />\r\n                        <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"name_last\"\r\n                        label=\"Last name\"\r\n                        name=\"name_first\"\r\n                        type=\"text\"\r\n                        value={values.name_last}\r\n                        onChange={handleChange('name_last')}\r\n                        />\r\n                        <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"email\"\r\n                        label=\"Email\"\r\n                        name=\"email\"\r\n                        type=\"email\"\r\n                        value={values.email}\r\n                        onChange={handleChange('email')}\r\n                        />\r\n                        <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"password\"\r\n                        label=\"Password\"\r\n                        name=\"password\"\r\n                        type=\"password\"\r\n                        value={values.password}\r\n                        onChange={handleChange('password')}\r\n                        />\r\n                        <Button type=\"submit\" fullWidth variant=\"contained\" color=\"primary\" style={{backgroundColor:\"#00b36e\"}}>\r\n                            Sign Up\r\n                        </Button>\r\n                    </ThemeProvider>\r\n                    <Grid container>\r\n                        <Grid item>\r\n                            <br />\r\n                            <Link href=\"/login\" variant=\"body1\" style={{color:\"#00b36e\"}}>\r\n                                {'Already have an account? Login'}\r\n                            </Link>\r\n                        </Grid>\r\n                    </Grid>\r\n                </form>\r\n            </Box>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default RegisterPage;","import axios from 'axios';\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Button,\r\n  Container,\r\n  Grid,\r\n  Link,\r\n  makeStyles,\r\n  ThemeProvider,\r\n  TextField,\r\n  Typography,\r\n  createMuiTheme,\r\n} from '@material-ui/core';\r\nimport React from 'react';\r\nimport BlurCircularIcon from '@material-ui/icons/BlurCircular';\r\nimport { green } from '@material-ui/core/colors';\r\nimport '../axios';\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  '@global': {\r\n    body: {\r\n      backgroundColor:  '#00FA9A',\r\n    },\r\n  },\r\n  card: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    marginTop: theme.spacing(8),\r\n    padding: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    borderRadius: theme.shape.borderRadius,\r\n  },\r\n  textfield: {\r\n\r\n  }\r\n}));\r\n\r\nfunction LoginPage({setAuth, ...props }) {\r\n  \r\n  function handleSubmit(event) {\r\n    event.preventDefault();\r\n    \r\n    // Get user inputs (TODO:)\r\n    const email = event.target[0].value;\r\n    const password = event.target[2].value;\r\n\r\n    // Quick validation\r\n    if (!email || !password) return;\r\n    \r\n    // Send to backend\r\n    axios.post('/auth/login',{ email, password })\r\n      .then((response) => {\r\n        console.log('response:',response);\r\n        const data = response.data;\r\n        // change this when server works\r\n        setAuth(data.token, data.u_id);\r\n        props.history.push('/');\r\n      })\r\n      .catch((err) => {console.log(err)});\r\n  }\r\n\r\n  const classes = useStyles();\r\n  const theme = createMuiTheme({\r\n    palette: {\r\n      primary: green,\r\n    },\r\n  });\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"sm\">\r\n      <Box boxShadow={3} className={classes.card}>\r\n        <Avatar style={{backgroundColor:\"black\"}}>\r\n          <BlurCircularIcon/>\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Login\r\n        </Typography>\r\n        <form  onSubmit={handleSubmit}>\r\n          <ThemeProvider theme={theme}>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"email\"\r\n            label=\"Email\"\r\n            name=\"email\"\r\n            type=\"text\"\r\n            autoFocus\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            autoComplete=\"current-password\"\r\n          />\r\n          <Button type=\"submit\" fullWidth variant=\"contained\" color=\"primary\" style={{backgroundColor:\"#00b36e\"}}>\r\n            Sign In\r\n          </Button>\r\n          </ThemeProvider>\r\n          <Grid container direction=\"column\" alignItems=\"center\">\r\n            <Grid item>\r\n              <br />\r\n              <Link href=\"/register\" variant=\"body1\" style={{color:\"#00b36e\"}}>\r\n                {\"Don't have an account? Register\"}\r\n              </Link>\r\n            </Grid>\r\n            <Grid item>\r\n              <br />\r\n              <Link href=\"/forgot_password\" variant=\"body1\" style={{color:\"#00b36e\"}}>\r\n                {\"Forgot password?\"}\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default LoginPage;","import React from 'react';\r\n\r\nconst AuthContext = React.createContext();\r\n\r\nexport const AuthProvider = AuthContext.Provider;\r\nexport const AuthClient = AuthContext.Consumer;\r\nexport default AuthContext;","import React from 'react';\r\nimport {Route, Redirect} from 'react-router-dom';\r\nimport AuthContext from '../AuthContext';\r\n\r\nfunction ProtectedRoute(props) {\r\n    const token = React.useContext(AuthContext);\r\n    console.log('token:',token);\r\n    // if token doesnt exist then do not allowed access and redirect to login\r\n    if(!token) {\r\n        return <Redirect to=\"/login\"/>;\r\n    }\r\n        return <Route {...props}/>;\r\n}\r\n\r\nexport default ProtectedRoute;","import React from 'react';\r\nfunction Header() {\r\n  return (\r\n    <div className=\"header\">\r\n      <header style= {headerStyle}>\r\n      <h1> Productivity app</h1>\r\n      <p>A convenient way to measure your time</p>\r\n      </header>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst headerStyle = {\r\n  alignItems: \"center\",\r\n  overflow:\"hidden\",\r\n  background: 'rgb(3, 219, 136)',\r\n  color: 'white',\r\n  textAlign: 'center',\r\n  padding: '10px',\r\n  fontFamily:\"consolas\"\r\n}\r\n\r\nexport default Header;\r\n","import React, {Component} from 'react';\r\nimport EditIcon from '@material-ui/icons/Edit'\r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\nimport CheckIcon from '@material-ui/icons/Check'\r\nclass TodoItems extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.createTasks = this.createTasks.bind(this)\r\n  }\r\n\r\n  \r\n\r\n  getStyle = (item) => {\r\n    return {textDecoration: item.completed? 'line-through':'none'};\r\n  }\r\n\r\n\r\n\r\n  createTasks(item){\r\n    return (<li style={this.getStyle(item)}>\r\n              {item.text}\r\n              <span>\r\n                <CheckIcon onClick= {() => this.completed(item.key)}\r\n                                        key= {item.key}/>\r\n                <EditIcon onClick= {() => this.rename(item.key)}\r\n                            key={item.key+1}/>\r\n                <DeleteIcon onClick= {() => this.delete(item.key)}\r\n                            key={item.key+2} />\r\n              </span>\r\n            </li>\r\n\r\n          )\r\n  }\r\n\r\n  delete(key) {\r\n    this.props.delete(key);\r\n  }\r\n\r\n  rename(key) {\r\n    this.props.edit(key);\r\n  }\r\n\r\n  completed(key) {\r\n    this.props.completed(key);\r\n  }\r\n\r\n  render() {\r\n    var todoEntries = this.props.entries;\r\n    var listItems = todoEntries.map(this.createTasks);\r\n\r\n    return (\r\n      <ul className=\"theList\">\r\n         {listItems}\r\n      </ul>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default TodoItems;\r\n","import React, {Component} from \"react\";\r\nimport \"./Timer.css\"\r\nimport AccessAlarmIcon from '@material-ui/icons/AccessAlarm';\r\n\r\n\r\nclass Timer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            hours:1,\r\n            minutes:0,\r\n            seconds:0,\r\n            TotalHours:0,\r\n        }\r\n        this.changeTimer = this.changeTimer.bind(this);\r\n        this.UpdateTimeHours = this.UpdateTimeHours.bind(this);\r\n        this.UpdateTimeMinutes = this.UpdateTimeMinutes.bind(this);\r\n        this.UpdateTimeSeconds = this.UpdateTimeSeconds.bind(this);\r\n        this._inputHours= null;\r\n        this._inputMinutes = null;\r\n        this._inputSeconds = null;\r\n    }\r\n\r\n    //Given any input from the input boxes transform seconds to minutes and minutes to hours\r\n    transformTime() {\r\n        let {hours, minutes,seconds} = this.state;\r\n        // Keep checking everytime updates occur\r\n        if (seconds > 60 || minutes > 60) { // avoid infinite loop \r\n            while (seconds > 60 || minutes > 60) {\r\n                if (seconds > 60) {\r\n                    seconds -= 60;\r\n                    // Convert string to int to calculate proper conversion\r\n                    minutes = minutes + 1;\r\n                }\r\n                if (minutes > 60) {\r\n                    minutes -= 60;\r\n                    // same as above\r\n                    hours = hours+ 1;\r\n                }\r\n            }\r\n            this.setState({\r\n                        hours:hours,\r\n                        minutes:minutes,\r\n                        seconds:seconds\r\n                    });\r\n\r\n        }\r\n        \r\n    }\r\n\r\n    checkTimer() {\r\n        \r\n        return this.props.starter;\r\n    }\r\n\r\n    getHours(hours,minutes,seconds) {\r\n        console.log('Starth:',hours,'min:',minutes,'sec:',seconds);\r\n        const Hminutes = minutes/60;\r\n        const Hseconds = (seconds/60)/60;\r\n        hours += Hminutes + Hseconds;\r\n        // get all minutes and seconds in hours\r\n        console.log('h:',hours,'min:',minutes,'sec:',seconds);\r\n        return hours;\r\n    }\r\n\r\n    \r\n\r\n\r\n\r\n    componentDidUpdate(prevProps) {\r\n\r\n        // if change in state and timer is activated start coundown\r\n        if((prevProps.starter !== this.props.starter) && (this.checkTimer() === true)) {\r\n            const { hours,minutes, seconds } = this.state;\r\n            // Store total hours completed before starting countdown\r\n            const TotalHours = this.getHours(hours,minutes,seconds);\r\n            this.setState({TotalHours:TotalHours});\r\n            this.myInterval = setInterval(\r\n                () => {\r\n                const { hours,minutes, seconds } = this.state;\r\n                // if seconds are greater than 0 keep decrementing\r\n                if (seconds > 0) { \r\n                    this.setState(({ seconds }) => ({\r\n                        // keep decrementing seconds until seconds is 0.\r\n                        seconds: seconds - 1\r\n                    }))\r\n                }\r\n                // check if minutes still need to decrement\r\n                else {\r\n                    if (minutes === 0) {\r\n                        if(hours === 0) {\r\n                            clearInterval(this.myInterval);\r\n                            this.setState({\r\n                                hours:1,\r\n                                minutes:0,\r\n                                seconds:0,\r\n                            });\r\n                            //update hours in item\r\n                            this.props.addHours(this.state.TotalHours,this.props.current);\r\n                            // return the time back to edit mode. (change the boolean in parent node).\r\n                            this.changeTimer();\r\n                            \r\n                        } else {\r\n                            // keep decrementing hours\r\n                            this.setState(({hours}) => ({\r\n                                minutes:59,\r\n                                seconds:59,\r\n                                hours:hours-1\r\n                            }))\r\n\r\n                        }\r\n                    } else {\r\n                        // keep decrementing minutes leave hours as it is.\r\n                        this.setState(({ minutes }) => ({\r\n                            minutes: minutes - 1,\r\n                            seconds: 59\r\n                        }))\r\n                    }\r\n                } \r\n            }, 1000);\r\n    \r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.myInterval)\r\n    }\r\n\r\n\r\n    \r\n\r\n    UpdateTimeHours(e) {\r\n        if ( (e.target.value !== \"\" )  && (!isNaN(e.target.value) ) ) {\r\n            // set new state\r\n            this.setState({hours:parseInt(e.target.value)});\r\n            this.transformTime();\r\n        }        \r\n\r\n    }\r\n\r\n    UpdateTimeMinutes(e) {\r\n        console.log('e:',e.target.value);\r\n        if ( (e.target.value !== \"\" )  && (!isNaN(e.target.value) ) ) {\r\n            // set new state\r\n            this.setState({minutes:parseInt(e.target.value)});\r\n            this.transformTime();\r\n        }        \r\n\r\n    }\r\n\r\n    UpdateTimeSeconds(e) {\r\n        if ( (e.target.value !== \"\" )  && (!isNaN(e.target.value) ) ) {\r\n            // set new state\r\n            this.setState({seconds:parseInt(e.target.value)});\r\n            this.transformTime();\r\n        }        \r\n\r\n    }\r\n\r\n    changeTimer() {\r\n        this.props.changeTimer();\r\n    }\r\n\r\n    timeFormat(time) {\r\n        if(time < 10) {\r\n            time = '0' + time;\r\n        }\r\n        return time;\r\n    }\r\n\r\n    //If cancel gets clicked change stop timer and delete last added item.\r\n    cancelItemCountdown() {\r\n        \r\n        this.changeTimer();\r\n    }\r\n    \r\n    render () {\r\n        //this.updateTime();\r\n        //this.transformTime();\r\n        \r\n        const hours = this.timeFormat(this.state.hours);\r\n        const minutes = this.timeFormat(this.state.minutes);\r\n        const seconds = this.timeFormat(this.state.seconds);\r\n        // if TodoList indicates not to start keep displaying the edit timer.\r\n        if (this.checkTimer() === false) {\r\n            return (\r\n                <div className=\"timer-editor\">\r\n                    <table>\r\n                        <tbody>\r\n                            <tr className = \"text-timer\">\r\n                                <th>Hours</th>\r\n                                <th>Minutes</th>\r\n                                <th>Seconds</th>\r\n                            </tr>\r\n                        </tbody>\r\n                        <tbody>\r\n                        <tr className=\"input-timer\">\r\n                                <td>\r\n                                    <input\r\n                                    //ref={ (a) => this._inputHours = a} \r\n                                        placeholder={hours}\r\n                                        onChange={this.UpdateTimeHours}\r\n                                    >\r\n                                    </input>\r\n                                </td>\r\n                                <td>\r\n                                    <input \r\n                                        //ref={ (a) => this._inputMinutes = a}\r\n                                        placeholder={minutes}\r\n                                        onChange={this.UpdateTimeMinutes}\r\n                                    >\r\n\r\n                                    </input>\r\n                                </td>\r\n                                <td>\r\n                                    <input\r\n                                    //ref= { (a) => this._inputSeconds = a}\r\n                                        placeholder={seconds}\r\n                                        onChange={this.UpdateTimeSeconds}\r\n                                    >\r\n                                    </input>\r\n                                </td>\r\n                                <td><AccessAlarmIcon/></td>\r\n                            </tr>\r\n                        </tbody>\r\n                        \r\n                    </table>\r\n                </div>\r\n                \r\n            );\r\n        } else { // display timer countdown\r\n            \r\n            return (\r\n                    <div className='timer-countdown'>\r\n                        <p className=\"timer-countdown-text\">{hours+ ':'+minutes + ':' + seconds} <AccessAlarmIcon/>\r\n                            <div>\r\n                                <form onSubmit={this.cancelItemCountdown}>\r\n                                    <button type=\"submit\" className='cancel-button'>Cancel</button>\r\n                                </form>\r\n                            </div>\r\n                            \r\n                        </p>\r\n                        \r\n                    </div> \r\n            );\r\n        }\r\n    }\r\n}\r\nexport default Timer;","import React, {Component} from \"react\";\r\nimport {Bar,Pie} from 'react-chartjs-2';\r\nimport { positions } from \"@material-ui/system\";\r\n//{Bar,Line,Pie}\r\n\r\nclass Chart extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className = \"BarChart\">\r\n                <Bar data={\r\n                    {\r\n                        labels: this.props.ChartData.labels,\r\n                        datasets:[{\r\n                            label:'Total Hours',\r\n                            data:this.props.ChartData.data,\r\n                            backgroundColor:'#ccffcc',\r\n                        }],\r\n                    }\r\n                \r\n                } \r\n                    width={50}\r\n                    height={30}\r\n                    options={\r\n                        {\r\n                            legend: {\r\n                              display: true,\r\n                              labelString: 'Hours Today'\r\n                            },\r\n                            scales: {\r\n                              yAxes: [{\r\n                                ticks: {\r\n                                   beginAtZero:true,\r\n                                   stepSize:1,\r\n                                 }\r\n                               }]\r\n                            }\r\n                        }\r\n                    }\r\n                />\r\n            </div>\r\n        );\r\n\r\n    }\r\n}\r\n\r\nexport default Chart;\r\n\r\n\r\n","import React, {Component} from \"react\";\r\nimport TodoItems from './TodoItems';\r\nimport \"./TodoList.css\";\r\nimport Timer from './Timer.js';\r\nimport Chart from './components/chart';\r\n\r\n\r\nclass TodoList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {items:[], search:[],startTimer:false,taskId:1,currentKey:0}\r\n    this.addItem = this.addItem.bind(this);\r\n    this.deleteItem = this.deleteItem.bind(this);\r\n    this.renameItem = this.renameItem.bind(this);\r\n    this.searchItem = this.searchItem.bind(this);\r\n    this.markCompleted = this.markCompleted.bind(this);\r\n    this.changeTimer = this.changeTimer.bind(this);\r\n  }\r\n\r\n  changeTimer() {\r\n    this.setState({startTimer:!this.state.startTimer}); \r\n    //this.startTimer = !this.startTimer;\r\n    console.log('timer is now: ',this.state.startTimer);\r\n  }\r\n  \r\n\r\n  addItem(e) {\r\n    //if new item then add to items list\r\n    if (this._inputElement !== \"\") {\r\n      // Start timer\r\n      //new element to add\r\n      let taskId = this.state.taskId;\r\n      const key = Date.now();\r\n      var item = {\r\n        text: this._inputElement.value, // text to store from input box\r\n        key: key, // get the time now as id\r\n        completed: false, // to format style later when task completed\r\n        hours:0, // hours spent on this task\r\n        TaskId:('T'+ taskId), // To format the bars instead of displaying the whole description\r\n      };\r\n\r\n      \r\n      if(item.text !== \"\" && this.state.startTimer === false) { // avoid empty tasks\r\n        \r\n        //Update Search state\r\n        var newS = this.state.search; // check if search is NOT empty to update state\r\n        if(!this.isSearchEmpty(this.state.search)) {\r\n          newS = newS.concat(item) // include to update state when searching\r\n        }\r\n        \r\n        //Add element to both initial list and search state\r\n        this.setState((prevState)=> ({\r\n          //get the last previous state add new item, update search item if needed\r\n          items:prevState.items.concat(item),\r\n          search:newS,\r\n          taskId: taskId+= 1,\r\n          currentKey:key,\r\n        }));\r\n        // Also update timer to start when added\r\n        this.changeTimer();\r\n      }\r\n\r\n      //finally set the string to empty\r\n      this._inputElement.value = \"\"\r\n      e.preventDefault(); // avoid default option\r\n      \r\n    }\r\n  }\r\n  //filters items and returns everything except the item with that key\r\n  deleteItem(key) {\r\n    if(this.state.startTimer === false) {\r\n       //filter condition\r\n      function delete_filter(item) {\r\n        return (item.key !== key);\r\n      }\r\n      const filteredItems = this.state.items.filter(delete_filter);\r\n      var newS = this.state.search;\r\n      if(!this.isSearchEmpty(this.state.search)) {\r\n        newS = this.state.search.filter(delete_filter) // include to update state when searching\r\n      }\r\n      \r\n      this.setState({\r\n        items:filteredItems,\r\n        search:newS\r\n      })\r\n\r\n    }\r\n   \r\n  }\r\n\r\n  cancelClock(key) {\r\n      //filter condition\r\n      function delete_filter(item) {\r\n        return (item.key !== key);\r\n      }\r\n      const filteredItems = this.state.items.filter(delete_filter);\r\n      var newS = this.state.search;\r\n      if(!this.isSearchEmpty(this.state.search)) {\r\n        newS = this.state.search.filter(delete_filter) // include to update state when searching\r\n      }\r\n      \r\n      this.setState({\r\n        items:filteredItems,\r\n        search:newS\r\n      })\r\n\r\n  }\r\n\r\n  // when click prompt will ask for new message and rename that item\r\n  renameItem(key) {\r\n    var message = prompt(\"Rename to do task\");\r\n    // if key is equal to what we look for rename the task with new message.\r\n    function Rename(item) {\r\n      if (item.key===key){\r\n        return item.text=message;\r\n      }\r\n    }\r\n    const items = this.state.items;\r\n    items.map(Rename);\r\n    this.setState({\r\n      items:items\r\n    })\r\n  }\r\n  //gets the key and marks the task as completed will change the style when boolean is true\r\n  markCompleted(key) {\r\n    const items = this.state.items;\r\n\r\n    function findKey(item){\r\n      if(item.key === key) {\r\n        return item.completed = !item.completed;\r\n      }\r\n    }\r\n    items.map(findKey);\r\n    this.setState({\r\n      items:items\r\n    })\r\n  }\r\n\r\n  isSearchEmpty(Ar) {\r\n    return (Array.isArray(Ar) && Ar.length)? false : true;\r\n  }\r\n  searchItem(e) { \r\n    // current list hold original version\r\n    let newL = []; // new list holds filtered version\r\n    let currentL = this.state.search;\r\n    if(e.target.value !== \"\") {\r\n      if(this.isSearchEmpty(this.state.search)) {\r\n        currentL = this.state.items; //save initial state\r\n      }\r\n      //Search filter based on input\r\n      function check_search(item) {\r\n        const str_check = item.text.toLowerCase();\r\n        return (str_check.includes(e.target.value));\r\n      }\r\n      //apply filter\r\n\r\n      newL = currentL.filter(check_search);\r\n    } else {\r\n      //we want to display original list if search is empty if not then search result\r\n      let searchA = this.state.search;\r\n      (Array.isArray(searchA) && searchA.length)? newL = this.state.search : newL = this.state.items; // condition to check what to update\r\n      currentL = []\r\n    }\r\n    this.setState({\r\n      items:newL,\r\n      search:currentL // update the state\r\n    })\r\n  }\r\n\r\n  AddTaskHours(hours,key) {\r\n    // Find key, then add hours\r\n    function AddHours(item) {\r\n      if (item.key===key) {\r\n        item.hours += hours\r\n      }\r\n    }\r\n    const items = this.state.items;\r\n    items.map(AddHours);\r\n    this.setState({items:items});\r\n\r\n  }\r\n\r\n  getCharData() {\r\n    //get list of items\r\n    const items = this.state.items;\r\n    let labels,data;\r\n    \r\n    if(items.length > 0) {\r\n      labels = new Array(items.length);\r\n      data = new Array(items.length);\r\n      for(let i = 0; i < items.length; i++) {\r\n        labels[i] = items[i].text;\r\n        data[i] = items[i].hours; \r\n      } \r\n      \r\n    } else {\r\n        labels = new Array('Add tasks to start displaying your hours!');\r\n        data = [0];\r\n      }\r\n    \r\n    var ChartData = {\r\n      labels:labels,\r\n      data:data,\r\n    }\r\n\r\n    return ChartData;\r\n    \r\n\r\n  }\r\n\r\n  render() {\r\n    return (<div className= \"todoListMain\">\r\n              <Timer starter = {this.state.startTimer}\r\n                      changeTimer = {()=>this.changeTimer()}\r\n                      addHours={(hours,key)=>this.AddTaskHours(hours,key)}\r\n                      current={this.state.currentKey}\r\n                      cancelItem={this.cancelClock}\r\n\r\n              />\r\n              <div className=\"graph-type\">\r\n                <form>\r\n                    <legend>Graph type</legend>\r\n                      <p>\r\n                        <select id= \"myList\" className =\"dropdown-selector\">\r\n                          <option value='bar'>Bar Chart</option>\r\n                          <option value='line'>Line Chart</option>\r\n                          <option value='pie'>Pie Chart</option>\r\n                        </select>\r\n                      </p>\r\n                </form>\r\n              </div>\r\n              <div className=\"input-box-todo\">\r\n                <form onSubmit={this.addItem}>\r\n                  <input\r\n                    ref={ (a) => this._inputElement = a }\r\n                    placeholder=\"enter to do ...\">\r\n                      \r\n                  </input>\r\n                  \r\n                  <button type=\"submit\"> Add </button>\r\n                </form>               \r\n            </div>\r\n            <div className = 'input-box-search'>\r\n              <input placeholder=\"task to search ..\" onChange={this.searchItem}></input>\r\n            </div>\r\n            <Chart ChartData = {this.getCharData()}\r\n                  AllData = {this.state.items}\r\n            />\r\n            <TodoItems entries={this.state.items}\r\n                       delete={this.deleteItem}\r\n                       edit={this.renameItem}\r\n                       completed= {this.markCompleted}/>\r\n          </div>\r\n\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default TodoList;\r\n","import Header from '../Header';\r\nimport TodoList from '../TodoList';\r\nimport React from 'react';\r\n\r\nclass DashBoardPage extends React.Component {\r\n    render () {\r\n        return (\r\n            <div>\r\n                <Header/>\r\n                <TodoList/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DashBoardPage;","import React from 'react';\r\nimport {BrowserRouter as Router,Route,Switch} from 'react-router-dom';\r\nimport RegisterPage from './pages/Register';\r\nimport LoginPage from './pages/Login';\r\nimport {AuthProvider} from './AuthContext';\r\nimport ProtectedRoute from './components/protectedRoute';\r\nimport DashBoard from './pages/DashBoard';\r\nimport './axios';\r\n\r\n\r\nfunction App () {\r\n    const [authDetails,setAuthDetails] = React.useState(\r\n        localStorage.getItem('token')\r\n    );\r\n\r\n    function setAuth(token,u_id) {\r\n        localStorage.setItem('token',token);\r\n        localStorage.setItem('u_id',u_id);\r\n        setAuthDetails(token);\r\n    }\r\n\r\n    return (\r\n        <AuthProvider value={authDetails}>\r\n            <Router>\r\n                <Switch>\r\n                    <Route\r\n                    exact\r\n                    path=\"/login\"\r\n                    render={(props)=>{\r\n                        return <LoginPage {...props} setAuth={setAuth}/>;\r\n                    }}\r\n                    />\r\n                    <Route\r\n                    exact\r\n                    path=\"/register\"\r\n                    render={(props)=>{\r\n                        return <RegisterPage {...props} setAuth={setAuth}/>;\r\n                    }}\r\n                    />\r\n                    <ProtectedRoute exact path=\"/\" component={DashBoard}/>\r\n                </Switch>\r\n            </Router>\r\n        </AuthProvider>\r\n    );\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n//import * as serviceWorker from './serviceWorker';\r\nimport App from './App';\r\n\r\nvar destination = document.querySelector('#root')\r\nReactDOM.render(\r\n  <div>\r\n    <App/>\r\n  </div>,\r\n  destination);\r\n\r\n/*\r\n<Header /> \r\n<TodoList/>\r\n\r\n*/"],"sourceRoot":""}
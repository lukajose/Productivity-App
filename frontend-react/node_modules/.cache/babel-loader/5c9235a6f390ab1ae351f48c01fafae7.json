{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jose Ca\\\\Desktop\\\\Programming\\\\Javascript\\\\ToDoList\\\\src\\\\components\\\\chart.js\";\nimport React, { Component } from \"react\";\nimport { Bar } from 'react-chartjs-2'; //{Bar,Line,Pie}\n\nclass Chart extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      chartData: {\n        labels: [],\n        datasets: [{\n          label: 'Total Hours',\n          data: [],\n          backgroundColor: '#ccffcc'\n        }]\n      }\n    };\n  }\n  /*\r\n      componentDidMount() {\r\n          var Data = {...this.state.chartData};\r\n          Data.labels = this.props.ChartData.labels;\r\n          Data.datasets[0].data = this.props.ChartData.data;\r\n          //update component with new data\r\n          console.log('Data:',Data);\r\n          this.setState({chartData:Data});\r\n      }\r\n  */\n\n  /*\r\n      componentDidUpdate(prevProps) {\r\n          \r\n          const currentLabels = this.state.chartData.labels;\r\n          console.log('Trigger - Prevlab:',prevProps.ChartData.labels.length,'NewL:',currentLabels.length);\r\n          if(prevProps.ChartData.labels.length !== currentLabels.length) {\r\n              //update data\r\n              var Data = {...this.state.chartData};\r\n              Data.labels = this.props.ChartData.labels;\r\n              Data.datasets[0].data = this.props.ChartData.data;\r\n              console.log('UpdateOnData:',Data);\r\n              this.setState({chartData:Data});\r\n          }\r\n      }\r\n  */\n\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"BarChart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(Bar, {\n      data: {\n        labels: this.props.ChartData.labels,\n        datasets: [{\n          label: 'Total Hours',\n          data: this.props.ChartData.data,\n          backgroundColor: '#ccffcc'\n        }]\n      },\n      width: 50,\n      height: 30,\n      options: {\n        legend: {\n          display: false\n        },\n        scales: {\n          yAxes: [{\n            ticks: {\n              beginAtZero: true,\n              stepSize: 1\n            }\n          }]\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Chart;","map":{"version":3,"sources":["C:/Users/Jose Ca/Desktop/Programming/Javascript/ToDoList/src/components/chart.js"],"names":["React","Component","Bar","Chart","constructor","props","state","chartData","labels","datasets","label","data","backgroundColor","render","ChartData","legend","display","scales","yAxes","ticks","beginAtZero","stepSize"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,GAAR,QAAkB,iBAAlB,C,CACA;;AAEA,MAAMC,KAAN,SAAoBF,SAApB,CAA8B;AAC1BG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAc;AACVC,MAAAA,SAAS,EAAE;AACPC,QAAAA,MAAM,EAAE,EADD;AAEPC,QAAAA,QAAQ,EAAC,CAAC;AACNC,UAAAA,KAAK,EAAC,aADA;AAENC,UAAAA,IAAI,EAAC,EAFC;AAGNC,UAAAA,eAAe,EAAC;AAHV,SAAD;AAFF;AADD,KAAd;AAWH;AACL;;;;;;;;;;;AAWA;;;;;;;;;;;;;;;;;AAgBIC,EAAAA,MAAM,GAAG;AACL,WACI;AAAK,MAAA,SAAS,EAAG,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,GAAD;AAAK,MAAA,IAAI,EACL;AACIL,QAAAA,MAAM,EAAE,KAAKH,KAAL,CAAWS,SAAX,CAAqBN,MADjC;AAEIC,QAAAA,QAAQ,EAAC,CAAC;AACNC,UAAAA,KAAK,EAAC,aADA;AAENC,UAAAA,IAAI,EAAC,KAAKN,KAAL,CAAWS,SAAX,CAAqBH,IAFpB;AAGNC,UAAAA,eAAe,EAAC;AAHV,SAAD;AAFb,OADJ;AAWI,MAAA,KAAK,EAAE,EAXX;AAYI,MAAA,MAAM,EAAE,EAZZ;AAaI,MAAA,OAAO,EACH;AACIG,QAAAA,MAAM,EAAE;AACNC,UAAAA,OAAO,EAAE;AADH,SADZ;AAIIC,QAAAA,MAAM,EAAE;AACNC,UAAAA,KAAK,EAAE,CAAC;AACNC,YAAAA,KAAK,EAAE;AACJC,cAAAA,WAAW,EAAC,IADR;AAEJC,cAAAA,QAAQ,EAAC;AAFL;AADD,WAAD;AADD;AAJZ,OAdR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AAkCH;;AA7EyB;;AAgF9B,eAAelB,KAAf","sourcesContent":["import React, {Component} from \"react\";\r\nimport {Bar} from 'react-chartjs-2';\r\n//{Bar,Line,Pie}\r\n\r\nclass Chart extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state =  {\r\n            chartData: {\r\n                labels: [],\r\n                datasets:[{\r\n                    label:'Total Hours',\r\n                    data:[],\r\n                    backgroundColor:'#ccffcc',\r\n                }],\r\n            }\r\n        }\r\n\r\n    }\r\n/*\r\n    componentDidMount() {\r\n        var Data = {...this.state.chartData};\r\n        Data.labels = this.props.ChartData.labels;\r\n        Data.datasets[0].data = this.props.ChartData.data;\r\n        //update component with new data\r\n        console.log('Data:',Data);\r\n        this.setState({chartData:Data});\r\n    }\r\n*/\r\n\r\n/*\r\n    componentDidUpdate(prevProps) {\r\n        \r\n        const currentLabels = this.state.chartData.labels;\r\n        console.log('Trigger - Prevlab:',prevProps.ChartData.labels.length,'NewL:',currentLabels.length);\r\n        if(prevProps.ChartData.labels.length !== currentLabels.length) {\r\n            //update data\r\n            var Data = {...this.state.chartData};\r\n            Data.labels = this.props.ChartData.labels;\r\n            Data.datasets[0].data = this.props.ChartData.data;\r\n            console.log('UpdateOnData:',Data);\r\n            this.setState({chartData:Data});\r\n        }\r\n    }\r\n*/\r\n\r\n    render() {\r\n        return (\r\n            <div className = \"BarChart\">\r\n                <Bar data={\r\n                    {\r\n                        labels: this.props.ChartData.labels,\r\n                        datasets:[{\r\n                            label:'Total Hours',\r\n                            data:this.props.ChartData.data,\r\n                            backgroundColor:'#ccffcc',\r\n                        }],\r\n                    }\r\n                \r\n                } \r\n                    width={50}\r\n                    height={30}\r\n                    options={\r\n                        {\r\n                            legend: {\r\n                              display: false\r\n                            },\r\n                            scales: {\r\n                              yAxes: [{\r\n                                ticks: {\r\n                                   beginAtZero:true,\r\n                                   stepSize:1,\r\n                                 }\r\n                               }]\r\n                              }\r\n                        }\r\n                    }\r\n                />\r\n            </div>\r\n        );\r\n\r\n    }\r\n}\r\n\r\nexport default Chart;\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jose Ca\\\\Desktop\\\\Programming\\\\Javascript\\\\ToDoList\\\\src\\\\TodoList.js\";\nimport React, { Component } from \"react\";\nimport TodoItems from './TodoItems';\nimport \"./TodoList.css\";\n\nclass TodoList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: []\n    };\n    this.addItem = this.addItem.bind(this);\n    this.deleteItem = this.deleteItem.bind(this);\n    this.renameItem = this.renameItem.bind(this);\n    this.searchItem = this.searchItem.bind(this);\n  }\n\n  addItem(e) {\n    //if item is not empty string create new item object and add\n    if (this._inputElement !== \"\") {\n      var item = {\n        text: this._inputElement.value,\n        key: Date.now() // get the time now as id\n\n      };\n      this.setState(prevState => {\n        {\n          /*get the last previous state add new item and return*/\n        }\n        return {\n          items: prevState.items.concat(item)\n        };\n      }); //finally set the string to empty\n\n      this._inputElement.value = \"\";\n      e.preventDefault();\n    }\n  }\n\n  deleteItem(key) {\n    var filteredItems = this.state.items.filter(function (item) {\n      return item.key !== key;\n    });\n    this.setState({\n      items: filteredItems\n    });\n  }\n\n  renameItem(key) {\n    var message = prompt(\"Rename to do task\");\n    const items = this.state.items;\n    items.map(item => {\n      if (item.key === key) {\n        item.text = message;\n      }\n    });\n    this.setState({\n      items: items\n    });\n  }\n\n  searchItem(e) {\n    e.preventDefault();\n\n    if (this._search.value !== \"\") {\n      var filteredItems = this.state.items.filter(function (item) {\n        return item.text.search(this._search.value);\n      });\n      this._search = \"\";\n      return React.createElement(TodoItems, {\n        entries: filteredItems,\n        delete: this.deleteItem,\n        edit: this.renameItem,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      });\n    } else {\n      return React.createElement(TodoItems, {\n        entries: this.state.items,\n        delete: this.deleteItem,\n        edit: this.renameItem,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"todoListMain\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.addItem,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      ref: a => this._inputElement = a,\n      placeholder: \"enter to do ...\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \" add\")), React.createElement(\"form\", {\n      onSubmit: this.searchItem,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      ref: b => this._search = b,\n      placeholder: \"task to search ..\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \" search \"))), React.createElement(TodoItems, {\n      entries: this.state.items,\n      delete: this.deleteItem,\n      edit: this.renameItem,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default TodoList;","map":{"version":3,"sources":["C:/Users/Jose Ca/Desktop/Programming/Javascript/ToDoList/src/TodoList.js"],"names":["React","Component","TodoItems","TodoList","constructor","props","state","items","addItem","bind","deleteItem","renameItem","searchItem","e","_inputElement","item","text","value","key","Date","now","setState","prevState","concat","preventDefault","filteredItems","filter","message","prompt","map","_search","search","render","a","b"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\r\nimport TodoItems from './TodoItems';\r\nimport \"./TodoList.css\";\r\nclass TodoList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {items:[]}\r\n    this.addItem = this.addItem.bind(this);\r\n    this.deleteItem = this.deleteItem.bind(this);\r\n    this.renameItem = this.renameItem.bind(this);\r\n    this.searchItem = this.searchItem.bind(this);\r\n  }\r\n  addItem(e) {\r\n    //if item is not empty string create new item object and add\r\n    if (this._inputElement !== \"\") {\r\n      var item = {\r\n        text: this._inputElement.value,\r\n        key:Date.now() // get the time now as id\r\n      };\r\n\r\n      this.setState((prevState)=> {\r\n        {/*get the last previous state add new item and return*/}\r\n        return  {items:prevState.items.concat(item)};\r\n      });\r\n      //finally set the string to empty\r\n      this._inputElement.value = \"\"\r\n      e.preventDefault();\r\n    }\r\n  }\r\n  deleteItem(key) {\r\n    var filteredItems = this.state.items.filter(function(item) {\r\n      return (item.key !== key)\r\n    });\r\n    this.setState({\r\n      items:filteredItems\r\n    })\r\n  }\r\n  renameItem(key) {\r\n    var message = prompt(\"Rename to do task\");\r\n    const items = this.state.items;\r\n    items.map(item => {\r\n      if (item.key===key){\r\n        item.text=message;\r\n      }\r\n    })\r\n    this.setState({\r\n      items:items\r\n    })\r\n  }\r\n  searchItem(e) {\r\n    e.preventDefault()\r\n    if(this._search.value !== \"\"){\r\n      var filteredItems = this.state.items.filter(function(item) {\r\n        return (item.text.search(this._search.value))\r\n      });\r\n      this._search = \"\"\r\n\r\n      return (<TodoItems entries={filteredItems}\r\n                 delete={this.deleteItem}\r\n                 edit={this.renameItem} />);\r\n    } else {\r\n      return (<TodoItems entries={this.state.items}\r\n                 delete={this.deleteItem}\r\n                 edit={this.renameItem}/>)\r\n    }\r\n\r\n  }\r\n\r\n  render() {\r\n    return (<div className= \"todoListMain\">\r\n              <div className=\"header\">\r\n                <form onSubmit={this.addItem}>\r\n                  {/*when adding let the _inputElement method be the input*/}\r\n                  <input\r\n                    ref={ (a) => this._inputElement = a }\r\n                    placeholder=\"enter to do ...\">\r\n                  </input>\r\n                  <button type=\"submit\"> add</button>\r\n                </form>\r\n                <form onSubmit={this.searchItem}>\r\n                  <input ref= {(b) => this._search =b} placeholder=\"task to search ..\">\r\n                  </input>\r\n                  <button type=\"submit\"> search </button>\r\n                </form>\r\n\r\n            </div>\r\n            <TodoItems entries={this.state.items}\r\n                       delete={this.deleteItem}\r\n                       edit={this.renameItem} />\r\n          </div>\r\n\r\n\r\n\r\n\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default TodoList;\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Jose Ca\\\\Desktop\\\\Programming\\\\Javascript\\\\ToDoList\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"C:\\\\Users\\\\Jose Ca\\\\Desktop\\\\Programming\\\\Javascript\\\\ToDoList\\\\src\\\\components\\\\chart.js\";\nimport React, { Component } from \"react\";\nimport { Bar } from 'react-chartjs-2'; //{Bar,Line,Pie}\n\nclass Chart extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      chartData: {\n        labels: [],\n        datasets: [{\n          label: 'Total Hours',\n          data: [],\n          backgroundColor: '#ccffcc'\n        }]\n      }\n    };\n  }\n\n  componentDidMount() {\n    var Data = _objectSpread({}, this.state.chartData);\n\n    Data.labels = this.props.ChartData.labels;\n    Data.datasets[0].data = this.props.ChartData.data; //update component with new data\n\n    console.log('Data:', Data);\n    this.setState({\n      chartData: Data\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n    const currentLabels = this.state.ChartData.labels;\n\n    if (prevProps.ChartData.labels.length !== currentLabels.length) {}\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"BarChart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(Bar, {\n      data: this.state.chartData,\n      width: 50,\n      height: 30,\n      options: {\n        legend: {\n          display: false\n        },\n        scales: {\n          yAxes: [{\n            ticks: {\n              beginAtZero: true,\n              stepSize: 1\n            }\n          }]\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Chart;","map":{"version":3,"sources":["C:/Users/Jose Ca/Desktop/Programming/Javascript/ToDoList/src/components/chart.js"],"names":["React","Component","Bar","Chart","constructor","props","state","chartData","labels","datasets","label","data","backgroundColor","componentDidMount","Data","ChartData","console","log","setState","componentDidUpdate","prevProps","currentLabels","length","render","legend","display","scales","yAxes","ticks","beginAtZero","stepSize"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,GAAR,QAAkB,iBAAlB,C,CACA;;AAEA,MAAMC,KAAN,SAAoBF,SAApB,CAA8B;AAC1BG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAc;AACVC,MAAAA,SAAS,EAAE;AACPC,QAAAA,MAAM,EAAE,EADD;AAEPC,QAAAA,QAAQ,EAAC,CAAC;AACNC,UAAAA,KAAK,EAAC,aADA;AAENC,UAAAA,IAAI,EAAC,EAFC;AAGNC,UAAAA,eAAe,EAAC;AAHV,SAAD;AAFF;AADD,KAAd;AAWH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB,QAAIC,IAAI,qBAAO,KAAKR,KAAL,CAAWC,SAAlB,CAAR;;AACAO,IAAAA,IAAI,CAACN,MAAL,GAAc,KAAKH,KAAL,CAAWU,SAAX,CAAqBP,MAAnC;AACAM,IAAAA,IAAI,CAACL,QAAL,CAAc,CAAd,EAAiBE,IAAjB,GAAwB,KAAKN,KAAL,CAAWU,SAAX,CAAqBJ,IAA7C,CAHgB,CAIhB;;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoBH,IAApB;AACA,SAAKI,QAAL,CAAc;AAACX,MAAAA,SAAS,EAACO;AAAX,KAAd;AACH;;AAEDK,EAAAA,kBAAkB,CAACC,SAAD,EAAY;AAC1B,UAAMC,aAAa,GAAG,KAAKf,KAAL,CAAWS,SAAX,CAAqBP,MAA3C;;AACA,QAAGY,SAAS,CAACL,SAAV,CAAoBP,MAApB,CAA2Bc,MAA3B,KAAsCD,aAAa,CAACC,MAAvD,EAA+D,CAE9D;AACJ;;AAGDC,EAAAA,MAAM,GAAG;AACL,WACI;AAAK,MAAA,SAAS,EAAG,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,GAAD;AAAK,MAAA,IAAI,EAAE,KAAKjB,KAAL,CAAWC,SAAtB;AACI,MAAA,KAAK,EAAE,EADX;AAEI,MAAA,MAAM,EAAE,EAFZ;AAGI,MAAA,OAAO,EACH;AACIiB,QAAAA,MAAM,EAAE;AACNC,UAAAA,OAAO,EAAE;AADH,SADZ;AAIIC,QAAAA,MAAM,EAAE;AACNC,UAAAA,KAAK,EAAE,CAAC;AACNC,YAAAA,KAAK,EAAE;AACJC,cAAAA,WAAW,EAAC,IADR;AAEJC,cAAAA,QAAQ,EAAC;AAFL;AADD,WAAD;AADD;AAJZ,OAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AAwBH;;AA1DyB;;AA6D9B,eAAe3B,KAAf","sourcesContent":["import React, {Component} from \"react\";\r\nimport {Bar} from 'react-chartjs-2';\r\n//{Bar,Line,Pie}\r\n\r\nclass Chart extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state =  {\r\n            chartData: {\r\n                labels: [],\r\n                datasets:[{\r\n                    label:'Total Hours',\r\n                    data:[],\r\n                    backgroundColor:'#ccffcc',\r\n                }],\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        var Data = {...this.state.chartData};\r\n        Data.labels = this.props.ChartData.labels;\r\n        Data.datasets[0].data = this.props.ChartData.data;\r\n        //update component with new data\r\n        console.log('Data:',Data);\r\n        this.setState({chartData:Data});\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        const currentLabels = this.state.ChartData.labels;\r\n        if(prevProps.ChartData.labels.length !== currentLabels.length) {\r\n            \r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className = \"BarChart\">\r\n                <Bar data={this.state.chartData} \r\n                    width={50}\r\n                    height={30}\r\n                    options={\r\n                        {\r\n                            legend: {\r\n                              display: false\r\n                            },\r\n                            scales: {\r\n                              yAxes: [{\r\n                                ticks: {\r\n                                   beginAtZero:true,\r\n                                   stepSize:1,\r\n                                 }\r\n                               }]\r\n                              }\r\n                        }\r\n                    }\r\n                />\r\n            </div>\r\n        );\r\n\r\n    }\r\n}\r\n\r\nexport default Chart;\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jose Ca\\\\Desktop\\\\Programming\\\\Javascript\\\\ToDoList\\\\src\\\\Timer.js\";\nimport React, { Component } from \"react\";\nimport \"./Timer.css\";\nimport AccessAlarmIcon from '@material-ui/icons/AccessAlarm';\n\nclass Timer extends Component {\n  constructor(props) {\n    super(props);\n    this.timer = {\n      hours: '01',\n      minutes: '00',\n      seconds: '00'\n    };\n  } //Given any input from the input boxes transform seconds to minutes and minutes to hours\n\n\n  transformTime() {\n    while (this.timer.seconds > 60 || this.timer.minutes > 60) {\n      if (this.timer.seconds > 60) {\n        this.timer.seconds -= 60;\n        this.timer.minutes += 1;\n      }\n\n      if (this.timer.minutes > 60) {\n        this.timer.minutes -= 60;\n        this.timer.hours += 1;\n      }\n    }\n  }\n\n  startTimer(e) {\n    this.transformTime();\n  }\n\n  checkTimer() {\n    return this.props.starter();\n  }\n\n  render() {\n    // if TodoList indicates not to start keep displaying the edit timer.\n    if (!this.checkTimer()) {\n      return React.createElement(\"div\", {\n        className: \"timer-editor\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(\"table\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        className: \"text-timer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \"Hours\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \"Minutes\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \"Seconds\"))), React.createElement(\"tr\", {\n        className: \"input-timer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        ref: a => this.timer.hours = a,\n        placeholder: this.timer.hours,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      })), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        ref: a => this.timer.minutes = a,\n        placeholder: this.timer.minutes,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      })), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        ref: a => this.timer.seconds = a,\n        placeholder: this.timer.seconds,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      })), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(AccessAlarmIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      })))));\n    } else {\n      // display timer countdown \n      return {};\n    }\n  }\n\n}\n\nexport default Timer;","map":{"version":3,"sources":["C:/Users/Jose Ca/Desktop/Programming/Javascript/ToDoList/src/Timer.js"],"names":["React","Component","AccessAlarmIcon","Timer","constructor","props","timer","hours","minutes","seconds","transformTime","startTimer","e","checkTimer","starter","render","a"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\r\nimport \"./Timer.css\"\r\nimport AccessAlarmIcon from '@material-ui/icons/AccessAlarm';\r\n\r\n\r\nclass Timer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.timer = {\r\n            hours:'01',\r\n            minutes:'00',\r\n            seconds:'00'\r\n        }\r\n    }\r\n\r\n    //Given any input from the input boxes transform seconds to minutes and minutes to hours\r\n    transformTime() {\r\n        while (this.timer.seconds > 60 || this.timer.minutes > 60) {\r\n            if (this.timer.seconds > 60) {\r\n                this.timer.seconds -= 60\r\n                this.timer.minutes += 1\r\n            }\r\n            if (this.timer.minutes > 60) {\r\n                this.timer.minutes -= 60\r\n                this.timer.hours += 1\r\n            }\r\n        }\r\n    }\r\n\r\n    startTimer(e) {\r\n        this.transformTime()\r\n        \r\n    }\r\n\r\n    checkTimer() {\r\n        return this.props.starter();\r\n    }\r\n    \r\n    render () {\r\n        // if TodoList indicates not to start keep displaying the edit timer.\r\n        if (!this.checkTimer()) {\r\n            return (\r\n                <div className=\"timer-editor\">\r\n                    <table>\r\n                        <tbody>\r\n                            <tr className = \"text-timer\">\r\n                                <th>Hours</th>\r\n                                <th>Minutes</th>\r\n                                <th>Seconds</th>\r\n                            </tr>\r\n                        </tbody>\r\n                    \r\n                        <tr className=\"input-timer\">\r\n                            <td>\r\n                                <input\r\n                                ref={ (a) => this.timer.hours = a} \r\n                                placeholder={this.timer.hours}\r\n                                >\r\n                                </input>\r\n                            </td>\r\n                            <td>\r\n                                <input \r\n                                    ref={ (a) => this.timer.minutes = a}\r\n                                    placeholder={this.timer.minutes}></input>\r\n                            </td>\r\n                            <td>\r\n                                <input\r\n                                ref= { (a) => this.timer.seconds = a}\r\n                                placeholder={this.timer.seconds}></input>\r\n                            </td>\r\n                            <td><AccessAlarmIcon/></td>\r\n                        </tr>\r\n                        \r\n                    </table>\r\n                </div>\r\n                \r\n            );\r\n        } else { // display timer countdown \r\n            return {}\r\n        }\r\n    }\r\n}\r\nexport default Timer;"]},"metadata":{},"sourceType":"module"}
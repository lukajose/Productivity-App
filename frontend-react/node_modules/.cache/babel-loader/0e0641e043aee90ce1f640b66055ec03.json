{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jose Ca\\\\Desktop\\\\Programming\\\\Javascript\\\\ToDoList\\\\src\\\\TodoList.js\";\nimport React, { Component } from \"react\";\nimport TodoItems from './TodoItems';\nimport \"./TodoList.css\";\nimport SearchIcon from '@material-ui/icons/Search';\nimport { fontSize } from \"@material-ui/system\";\n\nclass TodoList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: []\n    };\n    this.addItem = this.addItem.bind(this);\n    this.deleteItem = this.deleteItem.bind(this);\n    this.renameItem = this.renameItem.bind(this);\n    this.searchItem = this.searchItem.bind(this);\n    this.markCompleted = this.markCompleted.bind(this);\n  }\n\n  addItem(e) {\n    //if item is not empty string create new item object and add\n    if (this._inputElement !== \"\") {\n      console.log('new item');\n      var item = {\n        text: this._inputElement.value,\n        key: Date.now(),\n        // get the time now as id\n        completed: false\n      };\n      this.setState(prevState => {\n        {\n          /*get the last previous state add new item and return*/\n        }\n        return {\n          items: prevState.items.concat(item)\n        };\n      }); //finally set the string to empty\n\n      this._inputElement.value = \"\";\n      e.preventDefault();\n    }\n  }\n\n  deleteItem(key) {\n    var filteredItems = this.state.items.filter(function (item) {\n      return item.key !== key;\n    });\n    this.setState({\n      items: filteredItems\n    });\n  }\n\n  renameItem(key) {\n    var message = prompt(\"Rename to do task\");\n    const items = this.state.items;\n    items.map(item => {\n      if (item.key === key) {\n        item.text = message;\n      }\n    });\n    this.setState({\n      items: items\n    });\n  }\n\n  markCompleted(key) {\n    const items = this.state.items;\n    items.map(item => {\n      if (item.key === key) {\n        item.completed = !item.completed;\n      }\n    });\n    this.setState({\n      items: items\n    });\n  }\n\n  searchItem(e) {\n    let currentL = []; // current list hold original version\n\n    let newL = []; // new list holds filtered version\n\n    if (e.target.value !== \"\") {\n      console.log('Print wohoo at least it gets here');\n      currentL = this.props.items; // hold list\n\n      console.log(currentL);\n\n      function check_search(item) {\n        const str_check = item.text.toLowerCase();\n        console.log(str_check);\n        return str_check.includes(e.target.value);\n      }\n\n      newL = currentL.filter(check_search);\n      console.log(newL, 'this are the elements');\n    } else {\n      newL = this.props.items;\n    }\n\n    this.setState({\n      items: newL\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"todoListMain\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.addItem,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      ref: a => this._inputElement = a,\n      placeholder: \"enter to do ...\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \" add\")), React.createElement(\"input\", {\n      placeholder: \"task to search ..\",\n      onChange: this.searchItem,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \" \", React.createElement(SearchIcon, {\n      style: {\n        fontSize: 15\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }))), React.createElement(TodoItems, {\n      entries: this.state.items,\n      delete: this.deleteItem,\n      edit: this.renameItem,\n      completed: this.markCompleted,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default TodoList;","map":{"version":3,"sources":["C:/Users/Jose Ca/Desktop/Programming/Javascript/ToDoList/src/TodoList.js"],"names":["React","Component","TodoItems","SearchIcon","fontSize","TodoList","constructor","props","state","items","addItem","bind","deleteItem","renameItem","searchItem","markCompleted","e","_inputElement","console","log","item","text","value","key","Date","now","completed","setState","prevState","concat","preventDefault","filteredItems","filter","message","prompt","map","currentL","newL","target","check_search","str_check","toLowerCase","includes","render","a"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\r\nimport TodoItems from './TodoItems';\r\nimport \"./TodoList.css\";\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport { fontSize } from \"@material-ui/system\";\r\n\r\nclass TodoList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {items:[]}\r\n    this.addItem = this.addItem.bind(this);\r\n    this.deleteItem = this.deleteItem.bind(this);\r\n    this.renameItem = this.renameItem.bind(this);\r\n    this.searchItem = this.searchItem.bind(this);\r\n    this.markCompleted = this.markCompleted.bind(this);\r\n  }\r\n  addItem(e) {\r\n    //if item is not empty string create new item object and add\r\n    if (this._inputElement !== \"\") {\r\n      console.log('new item')\r\n\r\n      var item = {\r\n        text: this._inputElement.value,\r\n        key:Date.now(), // get the time now as id\r\n        completed: false\r\n      };\r\n\r\n      this.setState((prevState)=> {\r\n        {/*get the last previous state add new item and return*/}\r\n        return  {items:prevState.items.concat(item)};\r\n      });\r\n      //finally set the string to empty\r\n      this._inputElement.value = \"\"\r\n      e.preventDefault();\r\n    }\r\n  }\r\n  deleteItem(key) {\r\n    var filteredItems = this.state.items.filter(function(item) {\r\n      return (item.key !== key)\r\n    });\r\n    this.setState({\r\n      items:filteredItems\r\n    })\r\n  }\r\n  renameItem(key) {\r\n    var message = prompt(\"Rename to do task\");\r\n    const items = this.state.items;\r\n    items.map(item => {\r\n      if (item.key===key){\r\n        item.text=message;\r\n      }\r\n    })\r\n    this.setState({\r\n      items:items\r\n    })\r\n  }\r\n\r\n  markCompleted(key) {\r\n    const items = this.state.items;\r\n    items.map(item => {\r\n      if(item.key === key) {\r\n        item.completed = !item.completed;\r\n      }\r\n    })\r\n    this.setState({\r\n      items:items\r\n    })\r\n  }\r\n  searchItem(e) {\r\n    let currentL = []; // current list hold original version\r\n    let newL = []; // new list holds filtered version\r\n    if(e.target.value !== \"\"){\r\n      console.log('Print wohoo at least it gets here')\r\n      currentL = this.props.items; // hold list\r\n      console.log(currentL)\r\n      function check_search(item) {\r\n        const str_check = item.text.toLowerCase();\r\n        console.log(str_check)\r\n        return (str_check.includes(e.target.value));\r\n      }\r\n      newL = currentL.filter(check_search)\r\n      console.log(newL,'this are the elements')\r\n    } else {\r\n      newL = this.props.items;\r\n    }\r\n    this.setState({\r\n      items:newL\r\n    })\r\n  }\r\n\r\n\r\n\r\n\r\n  render() {\r\n    return (<div className= \"todoListMain\">\r\n              <div className=\"header\">\r\n                <form onSubmit={this.addItem}>\r\n                  {/*when adding let the _inputElement method be the input*/}\r\n                  <input\r\n                    ref={ (a) => this._inputElement = a }\r\n                    placeholder=\"enter to do ...\">\r\n                  </input>\r\n                  <button type=\"submit\"> add</button>\r\n                </form>\r\n                  <input placeholder=\"task to search ..\" onChange={this.searchItem}>\r\n                  </input>\r\n                  <button type=\"submit\"> <SearchIcon style={{fontSize:15}} /></button>\r\n            </div>\r\n            <TodoItems entries={this.state.items}\r\n                       delete={this.deleteItem}\r\n                       edit={this.renameItem}\r\n                       completed= {this.markCompleted}/>\r\n          </div>\r\n\r\n\r\n\r\n\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default TodoList;\r\n"]},"metadata":{},"sourceType":"module"}